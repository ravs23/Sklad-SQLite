<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="CodeDB.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NameDB.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DC_DB.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PC_DB.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DiscontDB.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PeriodDB.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Code.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Names.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DC.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PC.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Discont.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Period.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg5qSAE7NpwB8oZQRcKqYSmWwl4xht5zGWbye6FrB
        n/tRuJb/ULmW/1fCn/JcvqHaZbqgrWe2nWxwr5sogaWTBHullAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf4aFAGO5oABxo5UYZK2WbWOymcFcvJ7yU8ik/lLO
        qf9Q0qz/T9Ss/0zRqf9K0an/TdSs/03Tq/9Rz6j/VMml+1nBod5iup6WaLScNYmjmgN8qZoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHuglQCLlpMDbKmWTGKwmMhWv6D9Uc6n/0LC
        mP9Fy6H/Tdev/0zXrv9N167/Tdeu/07Wrv9M1Kz/PsKa/0zUq/9O163/T9Sr/1LNqP9awaPpaLafiHeu
        nRhpsZoAjLWoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0qJYAeqiYCGqnlHRetZvuVsml/0/U
        rf9N163/RMee/0rQp/9N1q7/TNWs/03Uq/9N1Kv/T9Or/07Sqf9HyKD/TtSs/0zWrv9O1q7/Ttau/07U
        rf9VyKj9X7qgwGuwnDRMuJUAhqahAAAAAAAAAAAAAAAAAAAAAAAAAAAAeqGSAImWjQVpqpV7W7md91HO
        qf9N1qz/S9et/07Xr/9X2LH/VdOs/1PNqP9Vx6T/WMOi+VjCofBYw6HvV8Wj9VbIpf1SzKf/T9Gp/0/V
        rP9N1q7/TNeu/07Vrv9Qzqn/XL2f1WetlTlLvpkAi6SZAAAAAAAAAAAAAAAAAHeomwAAzmgAbKmWZl24
        nfRQzqr/SNOq/03Wr/9t3Lv/e9y+/1/Nrf9ev6LvY7ieuWW0nXlpsp1LarGbNGeymzJkuKBAZLaeXmK7
        oqFYwKPjVMmn/k7SrP9P1a3/Ttau/0vWrf9Qz6j/XL2f1WyxnDRispsAhMGuAAAAAACAsI8AbaWUAHCl
        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
        8APgAAAH4IAAD/BAAB/4AAB//AgB//8P//8=
</value>
  </data>
</root>